/* HostNova - Optimized JavaScript - 2025-05-11 */


/* From: js\core.js */
/** * HostNova Core - Essential functionality * Core functions for loading, preloading, and section management */ /** * Handle preloader with better reliability */ function handlePreloader(){ const preloader = document.querySelector('.preloader');if (!preloader) return;const safetyTimeout = setTimeout(() =>{ console.log('Safety timeout triggered for preloader');forceHidePreloader();}, 5000);window.addEventListener('load', () =>{ clearTimeout(safetyTimeout);hidePreloader();handleSectionLoading();});if (document.readyState === 'complete'){ clearTimeout(safetyTimeout);hidePreloader();handleSectionLoading();}function hidePreloader(){ setTimeout(() =>{ preloader.classList.add('preloader-hidden');setTimeout(() =>{ preloader.style.display = 'none';document.body.classList.add('loaded');}, 600);}, 500);}function forceHidePreloader(){ preloader.classList.add('preloader-hidden');setTimeout(() =>{ preloader.style.display = 'none';document.body.classList.add('loaded');}, 100);}}/** * Mark sections as loaded to hide their loading indicators */ function handleSectionLoading(){ setTimeout(() =>{ const heroSection = document.getElementById('hero');if (heroSection){ heroSection.classList.add('loaded');}}, 1000);const sections = document.querySelectorAll('section');const markSectionAsLoaded = (entries) =>{ entries.forEach(entry =>{ if (entry.isIntersecting){ entry.target.classList.add('loaded');}});};const observer = new IntersectionObserver(markSectionAsLoaded,{ root: null, threshold: 0.1 });sections.forEach(section =>{ observer.observe(section);});}
/* From: js\visual-effects.js */
/** * HostNova Visual Effects - Cosmic background and orbital elements * All visual effects including stars, explosions, and orbital animations */ /** * Initialize the cosmic background with stars and effects */ function initializeCosmicBackground(){ createStars('star-layer-primary', 180, ['primary-star']);createStars('star-layer-secondary', 120, ['secondary-star']);setInterval(randomStarTwinkle, 800);setInterval(createRandomStarExplosion, 6000);setupDataStreams();}/** * Create stars with different properties for starfield */ function createStars(layerId, count, classNames){ const layer = document.getElementById(layerId);if (!layer) return;layer.innerHTML = '';for (let i = 0;i < count;i++){ const star = document.createElement('div');star.classList.add('star', ...classNames);star.style.top = `${Math.random() * 100}%`;star.style.left = `${Math.random() * 100}%`;const size = Math.random() * 3 + 1;if (size < 1.5) star.classList.add('tiny');else if (size > 2.5) star.classList.add('large');else star.classList.add('medium');if (Math.random() < 0.15){ const colorClass = Math.random() < 0.33 ? 'blue' : (Math.random() < 0.5 ? 'gold' : 'red');star.classList.add(colorClass);}star.style.animationDelay = `${Math.random() * 5}s`;star.style.setProperty('--twinkle-duration', `${3 + Math.random() * 4}s`);layer.appendChild(star);}}/** * Create a random star explosion effect */ function createRandomStarExplosion(){ const viewportWidth = window.innerWidth;const viewportHeight = window.innerHeight;if (viewportWidth < 768) return;const explosion = document.createElement('div');explosion.className = 'star-explosion';explosion.style.left = `${30 + Math.random() * (viewportWidth - 60)}px`;explosion.style.top = `${30 + Math.random() * (viewportHeight - 60)}px`;document.body.appendChild(explosion);const particleCount = 8 + Math.floor(Math.random() * 8);const colorTypes = ['blue', 'gold', 'red', ''];const colorClass = colorTypes[Math.floor(Math.random() * colorTypes.length)];for (let i = 0;i < particleCount;i++){ const particle = document.createElement('div');particle.className = `explosion-particle ${colorClass}`;const angle = (i / particleCount) * 360;const distance = 50 + Math.random() * 50;const duration = 1 + Math.random() * 1;particle.style.setProperty('--angle', `${angle}deg`);particle.style.setProperty('--distance', `${distance}px`);particle.style.setProperty('--particle-duration', `${duration}s`);explosion.appendChild(particle);}setTimeout(() =>{ explosion.remove();}, 3000);}/** * Make random stars twinkle more intensely */ function randomStarTwinkle(){ const stars = document.querySelectorAll('.star');if (stars.length === 0) return;const randomStar = stars[Math.floor(Math.random() * stars.length)];randomStar.style.setProperty('--min-opacity', '0.2');randomStar.style.setProperty('--max-opacity', '1');randomStar.style.setProperty('--min-scale', '0.7');randomStar.style.setProperty('--max-scale', '1.3');setTimeout(() =>{ randomStar.style.setProperty('--min-opacity', '');randomStar.style.setProperty('--max-opacity', '');randomStar.style.setProperty('--min-scale', '');randomStar.style.setProperty('--max-scale', '');}, 2000);}/** * Setup animated data streams */ function setupDataStreams(){ const container = document.querySelector('.data-stream-container');if (!container) return;container.innerHTML = '';for (let i = 0;i < 6;i++){ const stream = document.createElement('div');stream.className = 'data-stream';stream.style.top = `${10 + Math.random() * 80}%`;stream.style.transform = `rotate(${(Math.random() - 0.5) * 10}deg)`;stream.style.animationDelay = `${i * 2.5}s`;container.appendChild(stream);}}/** * Initialize orbital animations */ function initializeOrbitalAnimations(){ setupOrbitalTrails();setInterval(createEnergyFlare, 3000);}/** * Setup orbital trails */ function setupOrbitalTrails(){ const logo = document.querySelector('.featured-logo');if (!logo) return;const trail = document.createElement('div');trail.className = 'orbital-trail';logo.appendChild(trail);for (let i = 0;i < 5;i++){ const segment = document.createElement('div');segment.className = 'orbital-trail-segment';trail.appendChild(segment);}}/** * Create energy flare from central element */ function createEnergyFlare(){ const center = document.querySelector('.orbital-center');if (!center) return;const flare = document.createElement('div');flare.className = 'energy-flare';const angle = Math.random() * 360;flare.style.transform = `translate(-50%, 0) rotate(${angle}deg)`;center.appendChild(flare);setTimeout(() => flare.remove(), 3000);}
/* From: js\interactions.js */
/** * HostNova Interaction - User interactive elements * All user interaction functionality including cursor, parallax, and click effects */ /** * Initialize interactive elements */ function initializeInteractiveElements(){ document.addEventListener('click', createClickParticles);setupEnergyBeams();}/** * Create particles on click */ function createClickParticles(e){ if (window.innerWidth <= 768) return;for (let i = 0;i < 8;i++){ const particle = document.createElement('div');particle.classList.add('interactive-particle');if (i % 2 !== 0){ particle.style.backgroundColor = '#64ffda';}const moveX = (Math.random() - 0.5) * 100;const moveY = (Math.random() - 0.5) * 100;particle.style.setProperty('--move-x', `${moveX}px`);particle.style.setProperty('--move-y', `${moveY}px`);particle.style.left = `${e.clientX}px`;particle.style.top = `${e.clientY}px`;document.body.appendChild(particle);setTimeout(() => particle.remove(), 4000);}}/** * Setup energy beams between orbital satellites */ function setupEnergyBeams(){ const logo = document.querySelector('.featured-logo');if (!logo) return;const satellites = [ logo.querySelector('.orbital-satellite'), logo.querySelector('.orbital-satellite-secondary'), logo.querySelector('.orbital-satellite-tertiary') ].filter(Boolean);if (satellites.length < 2) return;for (let i = 0;i < satellites.length - 1;i++){ const beam = document.createElement('div');beam.className = 'energy-beam';logo.appendChild(beam);function updateBeamPosition(){ const sat1Rect = satellites[i].getBoundingClientRect();const sat2Rect = satellites[i+1].getBoundingClientRect();const logoRect = logo.getBoundingClientRect();const x1 = sat1Rect.left + sat1Rect.width/2 - logoRect.left;const y1 = sat1Rect.top + sat1Rect.height/2 - logoRect.top;const x2 = sat2Rect.left + sat2Rect.width/2 - logoRect.left;const y2 = sat2Rect.top + sat2Rect.height/2 - logoRect.top;const length = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));const angle = Math.atan2(y2 - y1, x2 - x1) * 180 / Math.PI;beam.style.width = `${length}px`;beam.style.left = `${x1}px`;beam.style.top = `${y1}px`;beam.style.transform = `rotate(${angle}deg)`;requestAnimationFrame(updateBeamPosition);}updateBeamPosition();}}/** * Initialize parallax effects */ function initializeParallaxEffects(){ const parallaxElements = document.querySelectorAll('.parallax-element');document.addEventListener('mousemove', function(e){ const mouseX = e.clientX / window.innerWidth;const mouseY = e.clientY / window.innerHeight;parallaxElements.forEach(element =>{ const depth = 20;const moveX = (mouseX - 0.5) * depth;const moveY = (mouseY - 0.5) * depth;element.style.transform = `translate(${moveX}px, ${moveY}px)`;});});window.addEventListener('scroll', function(){ const scrollY = window.scrollY;const nebulas = document.querySelectorAll('.nebula');nebulas.forEach((nebula, index) =>{ const speed = index % 2 === 0 ? 0.05 : 0.03;const yPos = -scrollY * speed;nebula.style.transform = `translateY(${yPos}px)`;});});}/** * Initialize custom cursor */ function initializeCustomCursor(){ const cursorDot = document.querySelector('.cursor-dot');const cursorFollower = document.querySelector('.cursor-follower');if (!cursorDot || !cursorFollower) return;document.addEventListener('mousemove', function(e){ cursorDot.style.left = e.clientX + 'px';cursorDot.style.top = e.clientY + 'px';setTimeout(() =>{ cursorFollower.style.left = e.clientX + 'px';cursorFollower.style.top = e.clientY + 'px';}, 70);});const interactiveElements = document.querySelectorAll('.interactive-hover, a, button');interactiveElements.forEach(element =>{ element.addEventListener('mouseenter', function(){ cursorFollower.style.width = '50px';cursorFollower.style.height = '50px';cursorFollower.style.borderColor = 'rgba(100, 255, 218, 0.5)';});element.addEventListener('mouseleave', function(){ cursorFollower.style.width = '40px';cursorFollower.style.height = '40px';cursorFollower.style.borderColor = 'rgba(76, 176, 243, 0.3)';});});}
/* From: js\sections.js */
/** * HostNova Sections - Business section functionality * Specific functionality for the business section */ /** * Initialize business section with animations and effects for corporate appearance */ function initializeBusinessSection(){ document.querySelectorAll('.business-card.animate-text-element, .testimonial-card').forEach((el, index) =>{ el.classList.add('visible');el.style.animationDelay = `${0.1 * index}s`;});const animateBusinessElements = () =>{ const elements = document.querySelectorAll('.animate-text-element');elements.forEach(element =>{ const elementTop = element.getBoundingClientRect().top;const elementBottom = element.getBoundingClientRect().bottom;const isVisible = elementTop < window.innerHeight - 100 && elementBottom > 0;if (isVisible){ element.classList.add('visible');}});const testimonials = document.querySelectorAll('.testimonial-card');testimonials.forEach(testimonial =>{ const testimonialTop = testimonial.getBoundingClientRect().top;const testimonialBottom = testimonial.getBoundingClientRect().bottom;const isVisible = testimonialTop < window.innerHeight - 100 && testimonialBottom > 0;if (isVisible){ testimonial.classList.add('visible');}});const appMockups = document.querySelectorAll('.app-mockup');appMockups.forEach((mockup, index) =>{ const mockupTop = mockup.getBoundingClientRect().top;const mockupBottom = mockup.getBoundingClientRect().bottom;const isVisible = mockupTop < window.innerHeight - 100 && mockupBottom > 0;if (isVisible){ mockup.style.opacity = '1';mockup.style.animationDelay = `${0.2 * index}s`;mockup.style.animationName = 'fadeInCorporate';}});const metricItems = document.querySelectorAll('.metric-item');metricItems.forEach((metric, index) =>{ const metricTop = metric.getBoundingClientRect().top;const metricBottom = metric.getBoundingClientRect().bottom;const isVisible = metricTop < window.innerHeight - 100 && metricBottom > 0;if (isVisible){ metric.style.opacity = '1';metric.style.animationDelay = `${0.3 * index}s`;metric.style.animationName = 'fadeInCorporate';setTimeout(() =>{ const valueElem = metric.querySelector('.metric-value');if (valueElem){ valueElem.classList.add('counting-animation');}}, 300 * index);}});const appCards = document.querySelectorAll('.app-card');appCards.forEach((card, index) =>{ const cardTop = card.getBoundingClientRect().top;const cardBottom = card.getBoundingClientRect().bottom;const isVisible = cardTop < window.innerHeight - 100 && cardBottom > 0;if (isVisible){ card.style.opacity = '1';card.style.animationDelay = `${0.15 * index}s`;}});};window.addEventListener('scroll', animateBusinessElements);const kenyaMap = document.querySelector('.business-kenya-map');if (kenyaMap){ kenyaMap.style.animation = 'kenyanMapPulse 4s infinite ease-in-out';}setTimeout(animateBusinessElements, 100);}
/* From: js\main.min.js */

